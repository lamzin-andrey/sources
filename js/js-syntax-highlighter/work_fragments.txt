//Подсветка синтаксиса в примерах кода в 
		$('.textcontent .vd_content pre').each(
			function (i, pre) {
				var s = $(pre).html().replace(/<br>/g, '\n');
				s = _highlightJsCode(s, sKeys, sKeysSF);
				//s = s.replace(/<br>/g, '\n');
				$(pre).html(s);
			}
		);
		
		
//добавление номеров строк 
		$('.textcontent pre').each(
			function(i, pre) {
				pre = $(pre);
				var parent = pre.parent(),
					tpl = $('<div class="code_example">\
						<div class="ce_btn"><input class="btn copy_example_btn" type="button" value="' + lang['Copy_this_code'] + '"></div>\
						<div class="ce_ls left"></div>\
						<div class="ce_pre left"></div>\
						<div class="clearfix"></div>\
					</div>');
				if (pre.hasClass('no_lines')) {
					return;
				}
				if (pre.hasClass('no_copy')) {
					tpl = $('<div class="code_example">\
						<div class="ce_ls left"></div>\
						<div class="ce_pre left"></div>\
						<div class="clearfix"></div>\
					</div>');
				}
				pre.after(tpl);
				var n = pre.text().split('\n').length;
				tpl.find('.ce_pre').first()[0].appendChild(pre[0]);
				var c = tpl.find('.ce_ls').first();
				for (var i = 0; i < n; i++) {
					c.append( $('<div class="ce_l">' + (i + 1) + '</div>') );
				}
				tpl.find('.btn').click(
					function() {
						var obj = $(this),
							text = obj.parent().parent().find('pre').text();
						$('#qs_editor_s').val(text);
					}
				);
			}
		);
		
/**
		 * @desc Подсветка JS кода
		 * Формат sKeys и sKeysSF "|Array|Promise|Object|"
		 * @see _highlightWordsInHelp
		 * @param keyMap - карта слов требующих подсветки в виде массива, получена во время работы  _getKeyMap
		 * @param sKeys  - специальная строка с ключевыми словами, требующими подсветки, результат _getKeyMap
		 * @param sKeysSF - специальная строка с именами стандартных функций, результат _getKeyMap
		 * @param String wrapAsExample - префикс имени функции, в которую будет "завернут" код
		 * 								 если не задано, то код в функцию не заворачивается
		*/
		function _highlightJsCode(content, sKeys, sKeysSF, wrapAsExample) {
			var list, j, copy;
			content = content.replace(/\\"/mig, 'SLASHED_D_QUOTES');
			content = content.replace(/\s?"([^"]*)"/mig, '<span class="strcolor"> "$1"</span>');
			content = content.replace(/SLASHED_D_QUOTES/mig, '\\"');
			content = content.replace(/\\\//mig, 'SLASHED_D_QUOTES');
			copy = content;
			content = content.replace(/(\/[^\/]+\/[mig]{1,3})/mig, '<span class="recolor"> $1 </span>');
			if (copy == content) {
				content = content.replace(/(\/[^\/]+\/)[^\/]]*$/mig, '<span class="recolor"> $1 </span>');
			}
			content = content.replace(/SLASHED_D_QUOTES/mig, '\\/');
			content = content.replace(/\s?'([^']*)'/mig, '<span class="strcolor"> \'$1\'</span>');
			content = content.replace(/(\s?\/\/[^\n]+)\n?$/mig, '<span class="strcolor">$1</span>');
			content = content.replace(/\/\*([^*]*)\*\//mig, '<span class="strcolor">/*$1*/</span>');

			if (wrapAsExample) {
				list = content.split('\n');
				buf = [];
				for (j = 0; j < list.length; j++) {
					if (list[j].length) {
						//if (wrapAsExample) {
						buf.push(' QSTAB ' + list[j]);
						/*} else {
							buf.push(list[j]);
						}*/
					}
				}
				content = 'function ' + wrapAsExample + 'Example() { QSNEW_LINE ' + buf.join(' QSNEW_LINE ') + ' QSNEW_LINE }';
			} else {
				content = content.replace(/\n/g, ' QSNEW_LINE '); //buf.join(' QSNEW_LINE ');
			}
		
			content = content.replace(/\t/gim, ' QSTAB ');
			content = content.replace(/,/gim, ' QSZP ');
			content = content.replace(/:/gim, ' QSDP ');
			content = content.replace(/\./gim, ' QSDOT ');
			content = content.replace(/\(/gim, ' QSBRCK ');
			content = content.replace(/;/gim, ' QSENDOP ');
			list = content.split(/\s/);
			for (j = 0; j < list.length; j++) {
				if (sKeys.indexOf('|' + list[j] + '|') != -1) {
					list[j] = '<b>' + list[j] + '</b>';
				}
				if (sKeysSF.indexOf('|' + list[j] + '|') != -1) {
					list[j] = '<i>' + list[j] + '</i>';
				}
			}
			content = list.join(' ');
			content = content.replace(/ QSTAB /gim, '\t');
			content = content.replace(/ QSNEW_LINE /gim, '\n');
			content = content.replace(/ QSZP /gim, ',');
			content = content.replace(/ QSDP/gim, ':');
			content = content.replace(/ QSDOT /gim, '.');
			content = content.replace(/ QSBRCK /gim, '(');
			content = content.replace(/ QSENDOP /gim, ';');
			return content;
		}
		

